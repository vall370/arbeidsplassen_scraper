generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model job_listing {
  id           String    @id @db.VarChar
  businessname String?   @db.VarChar
  medium       String?   @db.VarChar
  title        String?   @db.VarChar
  locationlist Json?
  contactlist  Json?
  location     Json?
  properties   Json?
  status       String?   @db.VarChar
  external_id  Int?
  published    DateTime? @db.Timestamptz(6)
  expires      DateTime? @db.Timestamptz(6)
  updated      DateTime? @db.Timestamptz(6)
  fastapply    String?   @db.VarChar
}

model accounts {
  id                   Int       @id @default(autoincrement())
  compound_id          String?   @unique(map: "compound_id") @db.VarChar(255)
  user_id              Int
  provider_type        String    @db.VarChar(255)
  provider_id          String    @db.VarChar(255)
  provider_account_id  String    @db.VarChar(255)
  refresh_token        String?
  access_token         String?
  access_token_expires DateTime? @db.Timestamptz(6)
  created_at           DateTime  @default(now()) @db.Timestamptz(6)
  updated_at           DateTime  @default(now()) @db.Timestamptz(6)

  @@index([provider_account_id], map: "provider_account_id")
  @@index([provider_id], map: "provider_id")
  @@index([user_id], map: "user_id")
}

model sessions {
  id            Int      @id @default(autoincrement())
  user_id       Int
  expires       DateTime @db.Timestamptz(6)
  session_token String   @unique(map: "session_token") @db.VarChar(255)
  access_token  String?  @unique(map: "access_token") @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
}

model users {
  id             Int       @id @default(autoincrement())
  name           String?   @db.VarChar(255)
  email          String?   @unique(map: "email") @db.VarChar(255)
  email_verified DateTime? @db.Timestamptz(6)
  image          String?
  created_at     DateTime  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime  @default(now()) @db.Timestamptz(6)
}
